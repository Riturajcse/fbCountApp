<!DOCTYPE html>
<html ng-app="app">
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1><%= title %></h1>

    <ng-view></ng-view>

    <!-- Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular-route.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular-resource.min.js"></script>
     <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular-cookies.min.js"></script>

    <!-- Template -->
    <script type="text/ng-template" id="/Login.html">
      <button ng-click="FBLogin()">FBLogin</button>
    </script>

    <script type="text/ng-template" id="/Profile.html">
      <div ng-if="loggedIn">
        <h2>{{userName}}</h2>
        count: {{userCount}}<br>
        <img ng-src={{pic}}></img>
        </br>
        <button ng-click="FBLogout()">FBLogout</button>
      </div>
      <div ng-if="!loggedIn">
        You are not logged in. </br>
        <a href="/">Login</a>
      </div>
    </script>


    <script>
      angular.module('app', ['ngRoute', 'ngResource', 'ngCookies'])

        // Services

        .factory('loginCount', ['$resource', function($resource){
          return $resource('/count/:id', null, {
            'update': { method:'PUT' }
          });
        }])

        // Controllers

        .controller('LoginCtrl', ['$scope', 'loginCount', '$location', '$cookieStore', function ($scope, loginCount, $location, $cookieStore) {
          $scope.allUsers = loginCount.query();
          $scope.FBLogin = function() {
            FB.login(function(response) {
              if (response.authResponse) {
                FB.api('/me', function(response) {
                  var img = 'http://graph.facebook.com/' + response.id + '/picture?type=normal';
                  $scope.name = response.name;
                  var count = 1;
                  var exists = false;
                  for (var i = $scope.allUsers.length - 1; i >= 0; i--) {
                    if ($scope.allUsers[i].name === $scope.name) {
                      updateUser(i);
                      $scope.allUsers[i].count += 1;
                      count = $scope.allUsers[i].count;
                      exists = true;
                    }
                  }
                  if(!exists)
                    saveUser();
                  var userData = {
                    name: response.name,
                    pic : img,
                    count: count,
                    id: response.id,
                    auth: response.authResponse
                  }
                  $cookieStore.put('loggedInUserData', userData);
                  $location.path('/profile');
                });
              } else {
               console.log('User did not authorize.');
              }
            },{scope: 'public_profile'});
          }

          function saveUser() {
            var user = new loginCount({ name: $scope.name, count: 1 });

            user.$save(function(){
            });
          }

          function updateUser(index) {
            var currentUser = $scope.allUsers[index];
            loginCount.update({id: currentUser._id}, currentUser);
          }
        }])

        .controller('ProfileCtrl', ['$scope', '$routeParams', 'loginCount', '$location', '$cookieStore', function ($scope, $routeParams, loginCount, $location, $cookieStore) {
          var resId = $cookieStore.get("loggedInUserData");
          if (!resId)
            $scope.loggedIn = false;
          else {
            $scope.loggedIn = true;
            $scope.userName = resId.name;
            $scope.userCount = resId.count;
            $scope.pic= resId.pic;
            var authResponse = resId.auth;
            $scope.FBLogout = function() {
              FB.logout(authResponse);
              $cookieStore.put('loggedInUserData', null);
              $location.replace('/');
              $location.path('/');
            }
          }
        }])

        // Routes

        .config(['$routeProvider', function ($routeProvider) {
          $routeProvider
            .when('/', {
              templateUrl: '/Login.html',
              controller: 'LoginCtrl'
            })

            .when('/profile', {
              templateUrl: '/Profile.html',
              controller: 'ProfileCtrl'
           });
        }]);

        //FB JDK

        window.fbAsyncInit = function() {
          FB.init({
            appId      : '1669964286636341',
            xfbml      : true,
            version    : 'v2.8'
          });
          FB.AppEvents.logPageView();
        };

        (function(d, s, id){
           var js, fjs = d.getElementsByTagName(s)[0];
           if (d.getElementById(id)) {return;}
           js = d.createElement(s); js.id = id;
           js.src = "//connect.facebook.net/en_US/sdk.js";
           fjs.parentNode.insertBefore(js, fjs);
         }(document, 'script', 'facebook-jssdk'));
    </script>
  </body>
</html>
